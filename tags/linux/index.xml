<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on opso&#39;s blog</title>
    <link>/tags/linux/</link>
    <description>Recent content in Linux on opso&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Mon, 07 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux创建守护进程自启动脚本</title>
      <link>/post/linux-daemon/</link>
      <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/linux-daemon/</guid>
      <description>&lt;p&gt;在开发过程中，我们一般都是使用 &lt;code&gt;ssh&lt;/code&gt; 登录linux，在命令行下直接使用 &lt;code&gt;php-cli&lt;/code&gt; 模式运行 &lt;code&gt;swoole&lt;/code&gt;，一旦退出&lt;code&gt;ssh&lt;/code&gt; 或者使用 &lt;code&gt;ctrl&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;，终端会收到 &lt;strong&gt;HUP&lt;/strong&gt;（hangup）信号从而关闭其所有子进程 ,&lt;code&gt;swoole&lt;/code&gt; 进程会自动关闭。&lt;/p&gt;

&lt;p&gt;那有问题来了，没有靠谱的、可以让脚本在后台长期运行呢，答案是有的 :)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux初始化常见方式</title>
      <link>/post/linux-init/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/linux-init/</guid>
      <description>&lt;p&gt;近年来，Linux 系统的 init 进程经历了两次重大的演进，传统的 &lt;code&gt;sysvinit&lt;/code&gt; 已经逐渐淡出历史舞台，新的 &lt;code&gt;UpStart&lt;/code&gt; 和 &lt;code&gt;systemd&lt;/code&gt; 各有特点，越来越多的 Linux 发行版采纳了 &lt;code&gt;systemd&lt;/code&gt; (&lt;strong&gt;Ubuntu15.04+/CentOS7+&lt;/strong&gt;)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Composer命令root用户权限问题</title>
      <link>/post/ubuntu-web-user/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/ubuntu-web-user/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Composer&lt;/strong&gt; 作为php的包管理工具，今天在运行&lt;code&gt;composer&lt;/code&gt;命令的时候，遇到了 &lt;code&gt;Do not run Composer as root/super user!&lt;/code&gt; 权限提示问题，才知道是不能在root用户下运行的。&lt;/p&gt;

&lt;p&gt;为了统一&lt;code&gt;php-fpm&lt;/code&gt;、&lt;code&gt;nginx&lt;/code&gt;、&lt;code&gt;web&lt;/code&gt;目录三者权限，今天有空查了一些资料，实际操作了一遍。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux swap虚拟内存设置</title>
      <link>/post/linux-swap/</link>
      <pubDate>Wed, 25 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/linux-swap/</guid>
      <description>&lt;p&gt;在编译程序经常会出现&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;virtual memory exhausted: Cannot allocate memory&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;的异常，表示虚拟内存不足，通常是没有这是swap缓存或者缓存过小，在编译安装的时候经常会遇到这样的报错，需要设置swap虚拟内存。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>